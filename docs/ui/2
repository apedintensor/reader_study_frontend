# Visual Hierarchy Enhancement (PrimeVue 4 + Aura)

## Objective
Improve the visual hierarchy of the Vue application using PrimeVue 4 (styled mode with Aura theme) to enhance content readability and guide user focus.

## PrimeVue 4.x Styling Context
-   The application uses PrimeVue 4 in **styled mode**.
-   The **Aura theme preset** is active (`app.use(PrimeVue, { theme: { preset: Aura } })`).
-   Legacy theme CSS files (e.g., `theme.css`) are **not** used.

## Instructions for Enhancing Visual Hierarchy

1.  **Group Content with Cards**:
    -   Encapsulate logically related sections of content (e.g., patient information, AI-generated suggestions, user assessment forms) within PrimeVue `<Card>` components.
    -   Utilize the `#title`, `#subtitle`, and `#content` slots of the `Card` for structured presentation.

2.  **Separate Sections with Dividers**:
    -   Employ `<Divider />` components to create clear visual separation between distinct content blocks or `Card` components.
    -   Use `layout="horizontal"` (default) or `layout="vertical"` as appropriate. Add `type="dashed"` or `type="dotted"` for stylistic variation if needed.

3.  **Establish Clear Headings**:
    -   Use standard HTML heading elements (`<h2>`, `<h3>`, etc.) for section titles within cards or page sections.
    -   Alternatively, for more control or inline titles, use `<span>` or `<div>` elements styled with PrimeFlex typography classes (e.g., `text-xl`, `text-lg`, `font-bold`).
    -   Example: `<span class="text-xl font-bold">Section Title</span>`

4.  **Incorporate Icons in Headings (Optional)**:
    -   Add PrimeIcons (`<i class="pi pi-some-icon mr-2"></i>`) before heading text for visual cues and improved scannability.

5.  **Manage Spacing with PrimeFlex**:
    -   Apply PrimeFlex margin and padding utility classes (e.g., `p-mb-3`, `p-mt-4`, `p-p-3`) to ensure consistent and adequate spacing around cards, dividers, headings, and content elements.

## Required PrimeVue Components
-   `Card`: For grouping and outlining content sections.
-   `Divider`: For visually separating content blocks.

## Example Structure

```vue
<template>
  <div class="p-p-4">
    <Card class="p-mb-4">
      <template #title>
        <span class="text-xl font-bold">
          <i class="pi pi-user p-mr-2"></i>Patient Demographics
        </span>
      </template>
      <template #content>
        <!-- Patient details here -->
        <p>Name: Jane Doe</p>
        <p>Age: 52</p>
      </template>
    </Card>

    <Divider class="p-my-4" />

    <Card>
      <template #title>
        <span class="text-xl font-bold">
          <i class="pi pi-desktop p-mr-2"></i>AI Analysis
        </span>
      </template>
      <template #content>
        <!-- AI suggestions here -->
        <p>Top Suggestion: Condition X (Confidence: 85%)</p>
      </template>
    </Card>
  </div>
</template>

<script setup lang="ts">
import Card from 'primevue/card';
import Divider from 'primevue/divider';
// Other imports if needed
</script>
```

## Key Considerations
-   Maintain consistency with the Aura theme's styling.
-   Ensure changes are purely presentational and do not alter application logic.
-   Verify responsiveness of the layout after applying hierarchy changes.
